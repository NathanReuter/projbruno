a = 1
contributors()
demo()
demo('grafics')
demo('graphics')
clear
demo("base")
demo('base')
demo('error.catching')
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
if (!require(GetDFPData)) install.packages("GetDFPData", repos = "https://cloud.r-project.org/")
version
version
version
R
R.home()
library(rjson)
install.packages("rjson")
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(GetDFPData)
info = gdfpd.get.info.companies(type.data = "companies")
toJSON(info)
install.packages("RJSONIO")
exportJSON = toJSON(info)
write(exportJson, "info.json")
write(exportJSON, "info.json")
install.packages("jsonlite")
detach("package:rjson", unload=TRUE)
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = fromJSON(info, pretty = TRUE)
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = toJSON(info)
exportJSON = fromJSON(exportJSON, pretty = TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
detach("package:rjson", unload=TRUE)
detach("package:rjson", unload=TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
exportJSON
sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
var = sellingPorcentage()
var = sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
var <- sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
return (variableIncome)
df.statements
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
View(sellingPorcentage)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
source('~/projects/projetoBruno/progFiles/main.R')
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
View(var)
View(var[[1]])
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
}
return (valor)
}
test <-sellingPorcentage(df.statements)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = list();
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
companyNameList = list();
companyCodeList = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
for (j in currentDate) {
companyNameList = append(companyNameList, companyName);
companyCodeList = append(companyCodeList, companyCode);
}
}
return (companyNameList)
}
test <-sellingPorcentage(df.statements)
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
company['history.responsable']
View(company)
company$history.responsible.docs
debugSource('~/projects/projetoBruno/progFiles/main.R')
hComp
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
hComp
hComp$person.job
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
hResp
View(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hResp)
company$history.stockholders
View(company$history.stockholders)
View(company$history.stockholders)[[1]]
View(company$history.stockholders[[1]])
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hStockHolders)
View(hStockHolders)
hResp[[1]]
hResp$person.name
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
person()
person
hResp
hResp$person.name
debugSource('~/projects/projetoBruno/progFiles/main.R')
hResp[j]
hResp[[j]]
View(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(result)
View(hStockHolders)
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(result)
View(hStockHolders)
View(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(result)
result
length(result)
nrow(result)
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hStockHolders)
View(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hResp)
View(hResp$person.name)
length(hResp$person.name)
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hStockHolders)
debugSource('~/projects/projetoBruno/progFiles/main.R')
hStockHolders[name.stockholder == name]
hStockHolders[name.stockholder == name]
hStockHolders[hStockHolders$name.stockholder == name]
name
hStockHolders[hStockHolders$name.stockholder == name,]
subset(hStockHolders, name.stockholder == name)
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R', echo=TRUE)
n
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
hResp
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hResp)
length(hresp)
length(hResp)
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(result)
View(result)
debugSource('~/projects/projetoBruno/progFiles/main.R')
resultVector
View(resultVector)
View(result)
debugSource('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
