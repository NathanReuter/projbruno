a = 1
contributors()
demo()
demo('grafics')
demo('graphics')
clear
demo("base")
demo('base')
demo('error.catching')
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
if (!require(GetDFPData)) install.packages("GetDFPData", repos = "https://cloud.r-project.org/")
version
version
version
R
R.home()
library(rjson)
install.packages("rjson")
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(GetDFPData)
info = gdfpd.get.info.companies(type.data = "companies")
toJSON(info)
install.packages("RJSONIO")
exportJSON = toJSON(info)
write(exportJson, "info.json")
write(exportJSON, "info.json")
install.packages("jsonlite")
detach("package:rjson", unload=TRUE)
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = fromJSON(info, pretty = TRUE)
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = toJSON(info)
exportJSON = fromJSON(exportJSON, pretty = TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
detach("package:rjson", unload=TRUE)
detach("package:rjson", unload=TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
exportJSON
sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
var = sellingPorcentage()
var = sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
var <- sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
return (variableIncome)
df.statements
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
View(sellingPorcentage)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
source('~/projects/projetoBruno/progFiles/main.R')
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
View(var)
View(var[[1]])
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
}
return (valor)
}
test <-sellingPorcentage(df.statements)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = list();
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
companyNameList = list();
companyCodeList = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
for (j in currentDate) {
companyNameList = append(companyNameList, companyName);
companyCodeList = append(companyCodeList, companyCode);
}
}
return (companyNameList)
}
test <-sellingPorcentage(df.statements)
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(planilha1)
a = planilha1[order(planilha1$Número.Processos)]
a = planilha1[order(planilha1$Número.Processos),]
View(a)
a = planilha1[-order(planilha1$Número.Processos),]
View(a)
a = planilha1[order(-planilha1$Número.Processos),]
View(a)
filter(a, Ano = 2010)
filter(a, Ano == 2010)
filtered = filter(a, Ano = 2010)
filter(a, Ano == 2010)
filtered = filter(a, Ano == 2010)
filtered$Número.Processos
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
n
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
filter(a, Ano == 2011)
filter(a, Ano == 2014)
filter(a, Ano == 2015)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
(numberR - index)
debugSource('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
total <- merge(dataInfo ,semi,by=c("ID","Country"))
total <- merge(dataInfo ,semiResultFrame, by=c("Código","Ano"))
View(total)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
df.statements[1]
df.statements[[1]]
View(df.statements$history.mkt.value)
View(df.statements$history.mkt.value[[1]])
View(df.statements$history.mkt.value[[1]]$mkt.avg.value)
View(df.statements$fr.liabilities[[1]])
a = df.statements$fr.liabilities[[1]]
a[a$acc.desc == "Passivo Total"]
a[a$acc.desc == "Passivo Total",]
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Passivo Total",])
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Passivo Total",])
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Passivo Total",]$acc.value)
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Passivo Total",]$acc.value * 1000)
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Patrimônio Líquido",]$acc.value * 1000)
View(df.statements$fr.liabilities[[1]][a$acc.desc == "Patrimônio Líquido",]$acc.value)
View(df.statements$fr.assets)
View(df.statements$fr.assets[[1]])
View(df.statements$fr.liabilities[[1]][acc.desc == "Patrimônio Líquido",]$acc.value)
View(df.statements$fr.liabilities[[1]][$acc.desc == "Patrimônio Líquido",]$acc.value)
liabilities = df.statements$fr.liabilities[[1]]
B = liabilities[liabilities$acc.desc == "Passivo Total",]$acc.value * 1000;
C = liabilities[liabilities$acc.desc == "Patrimônio Líquido",]$acc.value * 1000;
assets = df.statements$fr.assets[[1]];
View(assets)
View(assets[assets$acc.desc == "Ativo Total"])
View(assets[assets$acc.desc == "Ativo Total"])
View(assets)
assets[assets$acc.desc == "Ativo Total"]
assets[assets$acc.desc == "Ativo Total", ]
View(assets[assets$acc.desc == "Ativo Total", ])
View(assets[assets$acc.desc == "Ativo Total", 2])
View(assets[assets$acc.desc == "Ativo Total", 3])
View(assets[assets$acc.desc == "Ativo Total", ])
View(assets[assets$acc.desc == "Ativo Total", 2,4])
View(assets[assets$acc.desc == "Ativo Total", 2:4])
View(assets[assets$acc.desc == "Ativo Total", 2;4])
View(assets[assets$acc.desc == "Ativo Total", c(2,4)])
View(assets[assets$acc.desc == "Ativo Total", c(2,5)])
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
ativoTotal
ativoTotal$acc.value * 1000
View(ativoTotal)
ativoTotal$acc.value = ativoTotal$acc.value * 1000;
View(ativoTotal)
View(liabilities[liabilitie)
View(liabilities)
View(liabilities[liabilities$acc.desc == "Passivo Total",])
View(liabilities[liabilities$acc.desc == "Passivo Total", 2,5])
View(liabilities[liabilities$acc.desc == "Passivo Total", c(2,5)])
debugSource('~/projects/projetoBruno/progFiles/main.R')
