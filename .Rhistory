sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
View(sellingPorcentage)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
source('~/projects/projetoBruno/progFiles/main.R')
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
View(var)
View(var[[1]])
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
}
return (valor)
}
test <-sellingPorcentage(df.statements)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = list();
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
companyNameList = list();
companyCodeList = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
for (j in currentDate) {
companyNameList = append(companyNameList, companyName);
companyCodeList = append(companyCodeList, companyCode);
}
}
return (companyNameList)
}
test <-sellingPorcentage(df.statements)
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
hs
View(hs)
View(hs$name.stockholder)
View(hb$person.name)
View(hs[hs$name.stockholder == hb$person.name])
View(hs[hs$name.stockholder == hb$person.name,])
filter(hs, name.stockholder == hb$person.name)
filter(hs, name.stockholder in hb$person.name)
filter(hs, name.stockholder %in% hb$person.name)
debugSource('~/projects/projetoBruno/progFiles/main.R')
load("./saves/statements.Rda")
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(filtered)
View(hb$person.name)
View(filtered$perc.ord.shares   )
View(filtered$perc.ord.shares + filtered$perc.pref.shares)
View(filtered$perc.pref.shares)
View(filtered$perc.ord.shares + filtered$perc.pref.shares)
View(as.numberic(filtered$perc.ord.shares) + as.numeric(filtered$perc.pref.shares))
View(as.numeric(filtered$perc.ord.shares) + as.numeric(filtered$perc.pref.shares))
View(as.numeric(filtered$perc.ord.shares) + as.numeric(filtered$perc.pref.shares))
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
colnames(filtered)
colnames(filtered)[15]
View(filtered[, c(1,2,15)]);
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(filtered[, c(1,2,15, 16)])
Q
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
a = read.csv("./completas/Planilha 8.csv")
View(a)
saveData(a, "POCPE")
POCPE = a
saveData(POCPE, "POCPE")
AM = read.csv("./completas/Planilha 9.csv")
View(AM)
saveData(AM, "AM")
source('~/projects/projetoBruno/progFiles/main.R')
View(AM)
colnames(am)
colnames(AM)
colnames(AM)[6]
colnames(AM)[6] = "AM"
colnames(AM)[5] = "DiretorAM"
saveData(AM, "AM")
source('~/projects/projetoBruno/progFiles/main.R')
View(AM)
saveData(AM, "AM")
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(RMA)
source('~/projects/projetoBruno/progFiles/main.R')
load("~/projects/projetoBruno/progFiles/saves/rpj.Rda")
View(rpjSheet)
RPJ = rpjSheet
saveData(RPJ, "RPJ")
debugSource('~/projects/projetoBruno/progFiles/main.R')
colnames(selectedInfo)
compiler::setCompilerOptions(optimize = 2)
selectedInfo
selectedInfo$fr.assets
View(selectedInfo$fr.assets)
View(selectedInfo$fr.assets[[1]])
hb =selectedInfo$selectedInfo$fr.assets[[1]];
hb =selectedInfo$fr.assets[[1]];
hb[hb$acc.desc == "Ativo Total"]
hb[hb$acc.desc == "Ativo Total",]
a = hb[hb$acc.desc == "Ativo Total"]
a = hb[hb$acc.desc == "Ativo Total",]
View(a)
b = hb[hb$acc.desc == "Ativo Total",]
View(b)
SIZE = log(hb$acc.value * 1000)
View(SIZE)
View(hb)
hb = hb[hb$acc.desc == "Ativo Total",];
View(hb)
SIZE = log(hb$acc.value * 1000)
View(SIZE)
hb["SIZE"] = SIZE;
colnames(hb)
hb[, c(1,2,7)]
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
debugSource('~/projects/projetoBruno/progFiles/main.R')
View(hb)
hb[hb$listed.segment == "Novo Mercado"]
hb[hb$listed.segment == "Novo Mercado", ]
hb[hb$listed.segment %in% c("Novo Mercado", "Nível 2"), ]
"Novo Mercado" %in% c("Novo Mercado", "Nível 2")
"Novo Mercadoa" %in% c("Novo Mercado", "Nível 2")
x = "Novo Mercado"
X %in% c("Novo Mercado", "Nível 2")
X %in% c("Novo Mercado", "Nível 2")
x %in% c("Novo Mercado", "Nível 2")
isNiv <- function(X) {
if (X %in% c("Novo Mercado", "Nível 2")) {
return(1);
}
return (0)
}
isNiV
isNiv
NIV = hb[isNiv(hb$listed.segment)];
NIV = isNiv(hb$listed.segment)
sapply(hb$listed.segment, isNiv)
debugSource('~/projects/projetoBruno/progFiles/main.R')
colnames(hb)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(planilha1)
PJ = planilha1
saveData(PJ, "PJ")
source('~/projects/projetoBruno/progFiles/main.R')
View(p7)
View(P7)
View(APC)
POE = loadData("POE");
View(POE)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(rpoe)
View(RPOE)
saveData(RPOE, "RPOE")
source('~/projects/projetoBruno/progFiles/main.R')
View(PJ)
View(PJ[, c(2,3,4)])
PJ = PJ[, c(2,3,4)]
saveData(PJ, "PJ")
colnames(pj)
colnames(PJ)
colnames(RPJ)
merge(PJ, RPJ)
a = merge(PJ, RPJ)
View(a)
z = merge(PJ, RPJ)
View(a)
View(z)
merge(PJ, RPJ, by= c("Código", "Ano"))
merge(x= PJ, y= RPJ, by= c("Código", "Ano"), all)
merge(x= PJ, y= RPJ, by= c("Código", "Ano"))
merge(x= PJ, y= RPJ, by= "Código")
merge(x= PJ, y= RPJ, by= "Código", by="Ano")
merge(x= PJ, y= RPJ, by="Ano")
View(RPJ)
View(RPJ)
View(PJ)
source('~/projects/projetoBruno/progFiles/main.R')
PJ
View(RPJ)
View(RPJ[, c(1,2,4,5,6)])
View(PJ)
RPJ = RPJ[, c(1,2,4,5,6)]
saveData(RPJ, "RPJ")
View(RQT)
merge(RQT, RPJ)
merge(RPJ, RQT)
merge(RPJ, RQT, all = TRUE)
View(merge(RPJ, RQT, all = TRUE))
colnames(RQT)
colnames(RQT)[3]
colnames(RQT)[3] = "Compahnia"
View(merge(RPJ, RQT, all = TRUE))
colnames(RQT)[3]
colnames(RQT)[3] = "Companhia"
View(merge(RPJ, RQT, all = TRUE))
saveData(RQT, "RQT")
merge1 = merge(RPJ, RQT, all = TRUE);
View(merge1
View(merge1)
merge2 = merge(merge1, RAPC, all = TRUE)
View(merge2)
colnames(RAPC)
colnames(RAPC)[1] = "Código"
merge2 = merge(merge1, RAPC, all = TRUE)
View(merge2)
merge3 = merge(merge2, RPC, all = TRUE)
View(merge3)
colnames(RPC)
colnames(RPC)[1] = "Companhia"
merge3 = merge(merge2, RPC, all = TRUE)
View(merge3)
saveData(RPC, "RPC")
merge4 = merge(merge3, RRE, all = TRUE);
View(merge3)
View(merge4)
colnames(RRE)
colnames(RRE)[1] = "Companhia"
merge4 = merge(merge3, RRE, all = TRUE);
View(merge4)
saveData(RRE, "RRE")
colnames(RPRV)
colnames(RPRV)[1] = "Companhia"
merge5 = merge(merge3, RPRV, all = TRUE);
View(merge5)
colnames(RRPOE)
colnames(RPOE)
colnames(RPOE)[1] = "Companhia"
merge1 = merge(RPJ, RQT, all = TRUE);
merge2 = merge(merge1, RAPC, all = TRUE);
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
View(merge())
View(merge6)
colnames(POCPE)
POCPE[, c(2,3,4,5)]
colnames(POCPE[, c(2,3,4,5)])
POCPE = POCPE[, c(2,3,4,5)]
saveData(POCPE, "POCPE")
colnames(RMA)
colnames(RMA[, c(2:7)])
RMA = RMA[, c(2:7)]
saveData(RMA, "RMA")
colnames(SIZE)
colnames(SIZE)[1] = "Companhia"
colnames(NIV)[1]
NIV
merge7 = merge(merge6, POCPE, all = TRUE);
View(merge7)
View(POCPE)
colnames(POCPE)
colnames(POCPE)[4] = "POCPE"
saveData(POCPE, "POCPE")
merge7 = merge(merge6, POCPE, all = TRUE);
View(merge7)
merge8 = merge(merge7, RMA, all = TRUE);
View(merge7)
View(merge8)
merge9 = merge(merge8, SIZE, all = TRUE);
View(merge9)
NIV = loadData("NIV");
View(NIV)
colnames(NIV)[1] = "Companhia"
saveData(NIV, "NIV")
merge10 = merge(merge9, NIV, all = TRUE);
View(merge10)
colnames(merge10)
merge10$RPJ - merge10$Número.Processos
colnames(merge10)
merge10$RQT - merge10$RPJ
View(merge10$RQT - merge10$RPJ)
View(merge1)
View(merge2)
View(RPC)
View(RAPC)
merge2 = merge1;
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
merge7 = merge(merge6, POCPE, all = TRUE);
merge8 = merge(merge7, RMA, all = TRUE);
merge9 = merge(merge8, SIZE, all = TRUE);
merge10 = merge(merge9, NIV, all = TRUE);
View(merge10)
colnames(AM)
colnames(RAM)
colnames(RMA)
colnames(RMA)[1] = "Código"
merge2 = merge1;
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
merge7 = merge(merge6, POCPE, all = TRUE);
merge8 = merge(merge7, RMA, all = TRUE);
merge9 = merge(merge8, SIZE, all = TRUE);
merge10 = merge(merge9, NIV, all = TRUE);
View(merge10)
View(codeAndName)
View(merge3)
View(merge4)
View(merge5)
View(merge6)
View(merge7)
View(POCPE)
codeAndName
merge1 = merge(RPJ, RQT, all = TRUE);
#merge2 = merge(merge1, RAPC, all = TRUE);
merge2 = merge1;
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
merge7 = merge6;
#merge7 = merge(merge6, POCPE, all = TRUE);
merge8 = merge(merge7, RMA, all = TRUE);
merge9 = merge(merge8, SIZE, all = TRUE);
merge10 = merge(merge9, NIV, all = TRUE);
View(merge10)
merge1 = merge(RPJ, RQT, all = TRUE);
#merge2 = merge(merge1, RAPC, all = TRUE);
merge2 = merge1;
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
merge7 = merge6;
#merge7 = merge(merge6, POCPE, all = TRUE);
#merge8 = merge(merge7, RMA, all = TRUE);
merge8 = merge7;
merge9 = merge(merge8, SIZE, all = TRUE);
merge10 = merge(merge9, NIV, all = TRUE);
View(merge10)
merge10$RQT - merge10$RPJ
View(merge10$RQT - merge10$RPJ)
codeAndName
codeAndName$company.name
findCode = function (name) {
return (codeAndName[codeAndName$company.name == name]$company.code)
}
findCode("LOCALIZA RENT A CAR SA")
findCode = function (name) {
return (codeAndName[codeAndName$company.name == name,]$company.code)
}
findCode("LOCALIZA RENT A CAR SA")
View(RAPC)
sapply(RAPC$Companhia, findCode)
RAPC$Companhia
Q
Q
completa["AIAE1"] = completa$RQT - completa10$RPJ;
saveData(completa, "Completa")
completa = merge10;
completa["AIAE1"] = completa$RQT - completa10$RPJ;
completa = merge10;
merge1 = merge(RPJ, RQT, all = TRUE);
#merge2 = merge(merge1, RAPC, all = TRUE);
merge2 = merge1;
merge3 = merge(merge2, RPC, all = TRUE);
merge4 = merge(merge3, RRE, all = TRUE);
merge5 = merge(merge4, RPRV, all = TRUE);
merge6 = merge(merge5, RPOE, all = TRUE);
merge7 = merge6;
#merge7 = merge(merge6, POCPE, all = TRUE);
#merge8 = merge(merge7, RMA, all = TRUE);
merge8 = merge7;
merge9 = merge(merge8, SIZE, all = TRUE);
merge10 = merge(merge9, NIV, all = TRUE);
completa = merge10;
completa["AIAE1"] = completa$RQT - completa10$RPJ;
#["AIAE2"] = completa$RQT - completa10$RPJ;
completa
View(completa)
