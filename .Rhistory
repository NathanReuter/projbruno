a = 1
contributors()
demo()
demo('grafics')
demo('graphics')
clear
demo("base")
demo('base')
demo('error.catching')
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
gdfpd.get.info.companies(type.data = "companies")
library(GetDFPData)
if (!require(GetDFPData)) install.packages("GetDFPData", repos = "https://cloud.r-project.org/")
version
version
version
R
R.home()
library(rjson)
install.packages("rjson")
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(GetDFPData)
info = gdfpd.get.info.companies(type.data = "companies")
toJSON(info)
install.packages("RJSONIO")
exportJSON = toJSON(info)
write(exportJson, "info.json")
write(exportJSON, "info.json")
install.packages("jsonlite")
detach("package:rjson", unload=TRUE)
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = fromJSON(info, pretty = TRUE)
library("rjson", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
exportJSON = toJSON(info)
exportJSON = fromJSON(exportJSON, pretty = TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
detach("package:rjson", unload=TRUE)
detach("package:rjson", unload=TRUE)
exportJSON = toJSON(exportJSON, pretty = TRUE)
exportJSON
sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
var = sellingPorcentage()
var = sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
var <- sellingPorcentage()
source('~/projects/projetoBruno/progFiles/main.R')
return (variableIncome)
df.statements
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function() {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = df.statements$company.code
companyName = df.statements$company.name
# This will vary from list
companyYear = df.statements$date.cvm.registration
variableIncome = df.statements$fr.income;
return (variableIncome)
}
var <- sellingPorcentage()
View(sellingPorcentage)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date, last.data = last.date)
source('~/projects/projetoBruno/progFiles/main.R')
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]]
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A'
first.date <- '2010-01-01'
last.date <- '2017-01-01'
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date)
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncome = data$fr.income;
return (variableIncome)
}
var <- sellingPorcentage(df.statements)
View(var)
View(var[[1]])
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = data$date.cvm.registration
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
}
return (valor)
}
test <-sellingPorcentage(df.statements)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
View(test)
library("GetDFPData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4");
allCompanies = gdfpd.get.info.companies(type.data = "companies")[[1]];
name.companies <- 'ELETROPAULO METROPOLITANA EL.S.PAULO S.A';
first.date <- '2010-01-01';
last.date <- '2017-01-01';
df.statements <- gdfpd.GetDFPData(name.companies = name.companies,first.date = first.date);
sellingPorcentage <- function(data) {
#codigo da empresa, nome da empresa, ano, porcentage de renda variavel
companyCode = data$company.code
companyName = data$company.name
# This will vary from list
companyYear = list();
variableIncomeList = data$fr.income;
currentDate = list();
valor = list();
companyNameList = list();
companyCodeList = list();
for(i in variableIncomeList){
currentDate = i[2];
valor = i[5]
for (j in currentDate) {
companyNameList = append(companyNameList, companyName);
companyCodeList = append(companyCodeList, companyCode);
}
}
return (companyNameList)
}
test <-sellingPorcentage(df.statements)
View(test)
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/main.R')
source('~/projects/projetoBruno/progFiles/buildData.r')
source('~/projects/projetoBruno/progFiles/buildData.r')
View(data)
View(allData)
codeAndName = read.csv("./codeAndName.csv");
setwd("~/projects/projetoBruno/progFiles")
codeAndName = read.csv("./codeAndName.csv");
View(codeAndName)
source('~/projects/projetoBruno/progFiles/buildData.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
hb = selectedInfo$history.mkt.value[[1]]
View(hb)
hb2 = selectedInfo$history.stockholders[[1]]
View(hb2)
View(hb2$qtd.ord.shares + hb2$qtd.pref.shares)
hb2$qtd.ord.shares + hb2$qtd.pref.shares
hb2$qtd.ord.shares
hb2$qtd.pref.shares
as.numeric(hb2$qtd.ord.shares)
as.numeric(hb2$qtd.ord.shares) + as.numeric(hb2$qtd.pref.shares)
View(hb2[hb2$type.register == "Total", ]$qtd.ord.shares + [hb2$type.register == "Total", ]$qtd.pref.shares)
View(hb2[hb2$type.register == "Total", ])
View(hb2[hb2$type.register == "Total", ]$qtd.ord.shares + [hb2$type.register == "Total", ]$qtd.pref.shares)]
View(hb2[hb2$type.register == "Total", ]$qtd.ord.shares)
View(hb2[hb2$type.register == "Total", ]$qtd.ord.shares + [hb2$type.register == "Total", ]$qtd.pref.shares)
View([hb2$type.register == "Total", ]$qtd.pref.shares)
View(hb2[hb2$type.register == "Total", ]$qtd.ord.shares + hb2[hb2$type.register == "Total", ]$qtd.pref.shares)
debugSource('~/projects/projetoBruno/progFiles/main.r')
# for (year in years) {
#   filtered = hb[hb$ref.date == year, ];
#   total = nrow(unique(filtered));
#   count = nrow(filtered[filtered$code.type.job == 27, ]);
#   value = round(count/total, 4) * 100;
#   parcialFrame = data.frame("Companhia"=cName, "Código"=cCode, "Ano"=parseDate(filtered$ref.date[1]), "PC"=value);
#   resultFrame = rbind(resultFrame, parcialFrame);
# }
}
PL
valorDeMercado
debugSource('~/projects/projetoBruno/progFiles/main.r')
valorDeMercado
debugSource('~/projects/projetoBruno/progFiles/main.r')
valorDeMercado
PL = valorDeMercado/numeroAcoesEmpresa;
View(PL)
years = unique(hb$ref.date);
years
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
parseDate(years)
years
sapply(years, parseDate);
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(partialFrame)
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(partialFrame)
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
loadData("PL")
PL
pl
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
localiza = allData[allData$company.code == "19739",]
View(localiza)
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(valorMercado)
View(passivoTotal)
View(passivoTotal)
View(patrimonioLiquido)
View(patrimonioLiquido)
View(ativoTotal)
View(ativoTotal)
View(QTVALUE)
View(QTvalue)
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb)
hb2 = selectedInfo$fr.liabilities[[1]];
View(hb2)
debugSource('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(lucroLiquido)
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(patrimonioLiquido)
View(lucroLiquido)
255892/ 898742
255892*1000/ 898742
255892*1000/ 898742 *1000
0.28 * 1000
255892 * 1000/ 898742 * 1000
255892 * 1000/ 898742 * 1000
255892 * 1000/ 898742 * 1000
255892/ 898742
(255892/ 898742) *1000
(255892/ 898742) *1000000
(255892/ 898742) * (10**6)
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(PL)
View(patrimonioLiquido)
View(PVPA)
Q
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
nrow(years) != nrow(PVPA)
nrow(years)
years = sapply(unique(hb$ref.date), parseDate);
debugSource('~/projects/projetoBruno/progFiles/main.r')
nrow(years)
years
debugSource('~/projects/projetoBruno/progFiles/main.r')
nrow(years)
years
size(years)
length(years)
length(PVPA)
length(PVPA)
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(years)
View(PVPA)
hb$ref.date
hb2$ref.date
hb3$ref.date
max(hb$ref.date, hb3$ref.date)
max(length(hb$ref.date), length(hb3$ref.date))
getMaxDate = function() {
print(match.call());
}
getMaxDate(hb$ref.date, hb2$ref.date)
getMaxDate = function(...) {
print(match.call());
}
getMaxDate = function(...) {
print(match.call());
}
getMaxDate(hb$ref.date, hb2$ref.date)
getMaxDate(hb$ref.date, hb2$ref.date)
getMaxDate = function(a, b, ...) {
print(match.call());
}
getMaxDate(hb$ref.date, hb2$ref.date)
getMaxDate = function(a, b, ...) {
print(as.list(match.call()))
}
getMaxDate(hb$ref.date, hb2$ref.date)
max(hb$ref.date, hb2$ref.date, hb3$ref.date)
max(length(hb$ref.date), length(hb2$ref.date), length(hb3$ref.date))
a = c(length(hb$ref.date), length(hb2$ref.date), length(hb3$ref.date))
a
b = c(hb$ref.date, hb2$ref.date, hb3$ref.date)
b
View(b)
b = c(list(hb$ref.date), list(hb2$ref.date), list(hb3$ref.date))
View(b)
t = data.frame(a, b)
a
b
t = data.frame(a, b)
t = data.frame(a, b)
View(a)
View(b)
nrow(b)
sort(b, decreasing=TRUE, sortBy="size")
sort(b, decreasing=TRUE, sortBy="size")
sort(b, decreasing=TRUE)
a = c(length(hb$ref.date), length(hb2$ref.date), length(hb3$ref.date))
a
c(1: length())
c(1: length(a))
b = c(1: length())
t = data.frame(a, b)
a
b
b = c(1: length())
b = c(1: length(a))
b
t = data.frame(a, b)
t
t = data.frame(a)
t
t[sort()]
t[sort()]
t[order()]
t[order(a)]
t[order(t$a)]
t[order(t$a), ]
t[order(-t$a), ]
d = data.frame(hb$ref.date, hb2$ref.date, hb3$ref.date)
d
View(d)
getMaxDate = function(date1, date2, date3) {
t = data.frame(c(length(hb$ref.date), length(hb2$ref.date), length(hb3$ref.date)));
t = t[order(-t$a), ];
}
getMaxDate(hb$ref.date, hb2$ref.date, hb3$ref.date)
debugSource('~/projects/projetoBruno/progFiles/main.r')
Q
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb$level.remuneration)
debugSource('~/projects/projetoBruno/progFiles/main.r')
Q
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb$total.value.remuneration)
debugSource('~/projects/projetoBruno/progFiles/main.r')
Q
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(resultFrame)
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(RMDE)
View(years)
View(hb)
hb[complete.cases(hb), ]
View(hb[complete.cases(hb), ])
Q
Q
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb)
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb)
View(hb[hb$level.remuneration == "Management Council", ])
View(hb)
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
hb$variable.bonus
hb$variable.bonus + hb$variable.results.participation
hb$variable.bonus + hb$variable.results.participation + hb$variable.meetings.participation
hb$variable.bonus + hb$variable.results.participation + hb$variable.meetings.participation + hb$ variable.commissions.participation
hb$variable.bonus + hb$variable.results.participation + hb$variable.meetings.participation + hb$ variable.commissions.participation + hb$ variable.others + hb$stocks.options.benefits
(hb$variable.bonus + hb$variable.results.participation + hb$variable.meetings.participation + hb$ variable.commissions.participation + hb$ variable.others + hb$stocks.options.benefits) / hb$ total.value.remuneration
debugSource('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
debugSource('~/projects/projetoBruno/progFiles/main.r')
View(hb)
View(hb)
debugSource('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
source('~/projects/projetoBruno/progFiles/main.r')
